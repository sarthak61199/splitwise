generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(cuid())
  email            String         @unique
  name             String
  password         String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  groups           Group[]
  expenses         Expense[]      @relation("PaidBy")
  involvedIn       ExpenseShare[]
  sentPayments     Settlement[]   @relation("SentPayments")
  receivedPayments Settlement[]   @relation("ReceivedPayments")
}

model Group {
  id          String       @id @default(cuid())
  name        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  members     User[]
  expenses    Expense[]
  settlements Settlement[]
}

model Expense {
  id          String   @id @default(cuid())
  groupId     String
  amount      Decimal  @db.Decimal(10, 2)
  description String
  date        DateTime @default(now())
  paidById    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  group  Group          @relation(fields: [groupId], references: [id], onDelete: Cascade)
  paidBy User           @relation("PaidBy", fields: [paidById], references: [id])
  shares ExpenseShare[]
}

model ExpenseShare {
  id        String  @id @default(cuid())
  expenseId String
  userId    String
  amount    Decimal @db.Decimal(10, 2)

  expense Expense @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id])

  @@unique([expenseId, userId])
}

model Settlement {
  id         String   @id @default(cuid())
  groupId    String
  fromUserId String
  toUserId   String
  amount     Decimal  @db.Decimal(10, 2)
  date       DateTime @default(now())

  group    Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
  fromUser User  @relation("SentPayments", fields: [fromUserId], references: [id])
  toUser   User  @relation("ReceivedPayments", fields: [toUserId], references: [id])
}
